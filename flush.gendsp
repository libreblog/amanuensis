{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 0,
			"revision" : 3,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 40.0, 122.0, 576.0, 420.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 10.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 2,
		"gridsize" : [ 10.0, 10.0 ],
		"gridsnaponopen" : 2,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "To the Sun",
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-18",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 681.0, 410.0, 36.0, 20.0 ],
					"text" : "out 15"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-17",
					"linecount" : 2,
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 701.0, 430.0, 25.0, 31.0 ],
					"text" : "out 14"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-16",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 647.5384521484375, 430.0, 36.0, 20.0 ],
					"text" : "out 13"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-15",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 671.0, 410.0, 36.0, 20.0 ],
					"text" : "out 12"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 637.81817626953125, 410.0, 36.0, 20.0 ],
					"text" : "out 11"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-14",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 439.333343505859375, 410.0, 31.0, 20.0 ],
					"text" : "out 7"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-13",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 573.77777099609375, 410.0, 31.0, 20.0 ],
					"text" : "out 9"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-12",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 601.0, 410.0, 36.0, 20.0 ],
					"text" : "out 10"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-11",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 546.5555419921875, 410.0, 31.0, 20.0 ],
					"text" : "out 8"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-10",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 392.111114501953125, 410.0, 31.0, 20.0 ],
					"text" : "out 6"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-9",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 274.888885498046875, 410.0, 31.0, 20.0 ],
					"text" : "out 5"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 237.666671752929688, 410.0, 31.0, 20.0 ],
					"text" : "out 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 160.444442749023438, 410.0, 31.0, 20.0 ],
					"text" : "out 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 83.222221374511719, 410.0, 31.0, 20.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 25.0, 20.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 305.0, 14.0, 25.0, 20.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "place_span(track) {\r\n    Buffer recording_spans(\"recording_spans\");\r\n    Buffer stats(\"stats\");\r\n    //Place span (require() function to standardize with cleanup?)\r\n    click = peek(stats, 6);\r\n    stats.poke(1, 10);\t//lock\r\n    song_start = peek(recording_spans, 1, track);\r\n    span = peek(recording_spans, 0, track);\r\n    start = (peek(recording_spans, 2, track) - song_start) / click;\r\n    end = (peek(recording_spans, 3, track) - song_start) / click;\r\n    rating = end - start;\r\n    poke(recording_spans, 0, 0, track);\r\n    poke(recording_spans, 0, 1, track);\r\n    poke(recording_spans, 0, 2, track);\r\n    poke(recording_spans, 0, 3, track);\r\n    return span, start, rating, end, track;\r\n}\r\nplace_cue(track, palette) {\r\n    Buffer prior_cue_by_palette(\"prior_cue_by_palette\");\r\n    Buffer stats(\"stats\");\r\n    Buffer wake(\"wake\");\r\n    //Place cue (require() function to standardize with cleanup?)\r\n    click = peek(stats, 6);\r\n    song_start = peek(prior_cue_by_palette, 2, palette);\r\n    start_frame = peek(prior_cue_by_palette, 0, palette);\r\n    start = (start_frame - song_start) / click;  //Ramp position (start of attack). Everything stored in absolute frames\r\n    span = peek(prior_cue_by_palette, 1, palette);  //Span ID\r\n    pass = song_start;  //Pass (Starting_frame)\r\n    palette_position = peek(prior_cue_by_palette, 3, palette);  //Palette position (not in frames, keeps its own ms count)\r\n    peak_frame = peek(prior_cue_by_palette, 4, palette);\r\n    attack = peak_frame - start_frame;\r\n    release = peek(wake, 0);\r\n    peak_position = start + (attack / click);                             //Peak ramp position (should be obsolete when filtering/recitation are done in gen)\r\n    poke(prior_cue_by_palette, 0, 0, palette);\r\n    poke(prior_cue_by_palette, 0, 1, palette);\r\n    poke(prior_cue_by_palette, 0, 2, palette);\r\n    poke(prior_cue_by_palette, 0, 3, palette);\r\n    poke(prior_cue_by_palette, 0, 4, palette);\r\n    return start, span, pass, palette_position, attack, release, track, peak_position;\r\n}\r\nBuffer prior_cue_by_palette(\"prior_cue_by_palette\");\r\nBuffer wake(\"wake\");\r\nBuffer stats(\"stats\");\r\nBuffer recording_spans(\"recording_spans\");\r\nBuffer past_beats(\"past_beats\");\r\nBuffer memory(\"memory\");\r\nBuffer palette_by_track(\"palette_by_track\");\r\ntrack = in2;\r\npalette = in1;\r\nout1 = track;\r\nout15 = palette;\r\nout2 = -1;\r\nout7 = -1;\r\npoke(palette_by_track, palette, track); //Keep synced with external coll while we're at it\r\nif(palette) {   //Only do work on active tracks\r\n    beats = peek(past_beats, 0);\r\n    span_end = peek(recording_spans, 3, track);\r\n    if(span_end) {  //Make sure there is a span recording\r\n        for(beat = beats - 1; beat >= 0; beat -= 1) {\r\n            if(peek(memory, beat, 2) == -track) {\r\n                if(peek(memory, beat, 0) >= span_end + peek(wake, 0)) {\r\n                    out2, out3, out4, out5, out6 = place_span(track);\r\n                }\r\n                break;\r\n            }\r\n            else if(!beat) {    //Went through all indices and no more beads on its track\r\n                if(peek(stats, 0) >= span_end + peek(wake, 0)) { //Compare with now\r\n                    out2, out3, out4, out5, out6 = place_span(track);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    peak_frame = peek(prior_cue_by_palette, 4, palette);\r\n    if(peak_frame) {  //Make sure there is a cue ready to be placed\r\n        for(beat = beats - 1; beat >= 0; beat -= 1) {\r\n            if(peek(memory, beat, 2) == -track) {\r\n                if(peek(memory, beat, 0) >= peak_frame + peek(wake, 0)) {\r\n                    out7, out8, out9, out10, out11, out12, out13, out14 = place_cue(track, palette);\r\n                }\r\n                break;\r\n            }\r\n            else if(!beat) {    //Went through all indices and no more beads on its track\r\n                if(peek(stats, 0) >= peak_frame + peek(wake, 0)) {   //Compare with now\r\n                    out7, out8, out9, out10, out11, out12, out13, out14 = place_cue(track, palette);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
					"fontface" : 0,
					"fontname" : "Lucida Console",
					"fontsize" : 10.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 15,
					"outlettype" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ],
					"patching_rect" : [ 6.0, 39.0, 714.0, 361.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 6.0, 418.0, 31.0, 20.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-10", 0 ],
					"source" : [ "obj-3", 5 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-11", 0 ],
					"source" : [ "obj-3", 7 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-12", 0 ],
					"source" : [ "obj-3", 9 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-13", 0 ],
					"source" : [ "obj-3", 8 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-14", 0 ],
					"source" : [ "obj-3", 6 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-15", 0 ],
					"source" : [ "obj-3", 11 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-16", 0 ],
					"source" : [ "obj-3", 12 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-17", 0 ],
					"source" : [ "obj-3", 13 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-18", 0 ],
					"source" : [ "obj-3", 14 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-6", 0 ],
					"source" : [ "obj-3", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 10 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-8", 0 ],
					"source" : [ "obj-3", 3 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-9", 0 ],
					"source" : [ "obj-3", 4 ]
				}

			}
 ]
	}

}
